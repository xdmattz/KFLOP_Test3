<?xml version="1.0"?>
<!-- An attempt to make G Code highlighting for Avalon Edit -->
<!-- converted from the C# example xshd file -->
<!-- for more info on the syntax highlighting see -->
<!-- http://avalonedit.net/documentation/html/4d4ceb51-154d-43f0-b876-ad9640c5d2d8.htm -->
<!-- Colors can be referened from here: https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.colors?view=net-5.0 -->
<SyntaxDefinition name="GCODE" extensions=".tap;.nc;.ngc;.gcode" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
	<!-- The named colors 'Comment' and 'String' are used in SharpDevelop to detect if a line is inside a multiline string/comment -->
	<Color name="Comment" foreground="Green" exampleText="// comment" />
	<!-- Gcode -->
	<!-- Axis numbers -->
	<Color name="XAxis" fontWeight= "normal" foreground = "Red"/>
	<Color name="YAxis" fontWeight= "normal" foreground = "Green"/>
	<Color name="ZAxis" fontWeight= "normal" foreground = "Blue"/>	
	<Color name="AAxis" fontWeight= "normal" foreground = "Tomato"/>
	<Color name="BAxis" fontWeight= "normal" foreground = "LightBlue"/>
	<Color name="CAxis" fontWeight= "normal" foreground = "LightGreen"/>
	<Color name="IJKAxis" fontWeight= "normal" foreground = "LightBrown"/>	
	<Color name="SAxis" fontWeight= "normal" foreground = "Magenta"/>
	
	<!-- Feed rate and motion -->
	
	<Color name="MCode" fontWeight= "bold" foreground = "Navy"/>
	
	<Color name="Feed_rate" fontWeight= "normal" foreground = "DarkGreen"/>
	<Color name="Motion" fontWeight="bold" foreground="DarkGreen" />
	<Color name="Rapid" fontWeight="bold" foreground="DarkRed" />
	
	<Color name="LineNumbers" fontWeight="normal" foreground="LightBlue" />
	
	<Color name="CannedCycle" />
	<Color name="Distance" fontWeight="bold" foreground="Olive" />
	<Color name="FeedRate" fontWeight="bold" foreground="Pink"/>
	<Color name="Spindle" />
	<Color name="Coolant" />
	<Color name="Tools" fontWeight="bold" foreground="DeepPink" />
	<Color name="Stopping" />
	<Color name="Units" fontWeight="bold" foreground="Red" />

	<Color name="Plane" />
	
	<Color name="String" foreground="Blue" exampleText="string text = &quot;Hello, World!&quot;"/>
	<Color name="StringInterpolation" foreground="Black" exampleText="string text = $&quot;Hello, {name}!&quot;"/>
	<Color name="Char" foreground="Magenta" exampleText="char linefeed = '\n';"/>
	<Color name="Punctuation" exampleText="a(b.c);" />
	<Color name="ValueTypeKeywords" fontWeight="bold" foreground="Red" exampleText="bool b = true;" />
	<Color name="ReferenceTypeKeywords" foreground="Red" exampleText="object o;" />
	<Color name="MethodCall" foreground="MidnightBlue" fontWeight="bold" exampleText="o.ToString();"/>
	<Color name="NumberLiteral" foreground="DarkBlue" exampleText="3.1415f"/>
	<Color name="ThisOrBaseReference" fontWeight="bold" exampleText="this.Do(); base.Do();"/>
	<Color name="NullOrValueKeywords" fontWeight="bold" exampleText="if (value == null)"/>
	<Color name="Keywords" fontWeight="bold" foreground="Blue" exampleText="if (a) {} else {}"/>
	<Color name="GotoKeywords" foreground="Navy" exampleText="continue; return null;"/>
	<Color name="ContextKeywords" foreground="Navy" exampleText="var a = from x in y select z;"/>
	<Color name="ExceptionKeywords" fontWeight="bold" foreground="Teal" exampleText="try {} catch {} finally {}"/>
	<Color name="CheckedKeyword" fontWeight="bold" foreground="DarkGray" exampleText="checked {}"/>
	<Color name="UnsafeKeywords" foreground="Olive" exampleText="unsafe { fixed (..) {} }"/>
	<Color name="OperatorKeywords" fontWeight="bold" foreground="Pink" exampleText="public static implicit operator..."/>
	<Color name="ParameterModifiers" fontWeight="bold" foreground="DeepPink" exampleText="(ref int a, params int[] b)"/>
	<Color name="Modifiers" foreground="Brown" exampleText="static readonly int a;"/>
	<Color name="Visibility" fontWeight="bold" foreground="Blue" exampleText="public override void ToString();"/>
	<Color name="NamespaceKeywords" fontWeight="bold" foreground="Green" exampleText="namespace A.B { using System; }"/>
	<Color name="GetSetAddRemove" foreground="SaddleBrown" exampleText="int Prop { get; set; }"/>
	<Color name="TrueFalse" fontWeight="bold" foreground="DarkCyan" exampleText="b = false; a = true;" />
	<Color name="TypeKeywords" fontWeight="bold" foreground="DarkCyan" exampleText="if (x is int) { a = x as int; type = typeof(int); size = sizeof(int); c = new object(); }"/>
	<Color name="SemanticKeywords" fontWeight="bold" foreground="DarkCyan" exampleText="if (args == null) throw new ArgumentNullException(nameof(args));" />


	<!-- This is the main ruleset. -->
	<RuleSet>
		
		<Span color="Comment" multiline="false" begin=";" />

		<Span color="Comment" multiline="true" begin="\(" end="\)" />
		
		<!-- Axis values X00 Y00 Z00 A00 I00 J00 K00 this should look a bit like the digits -->
		<Rule color = "XAxis" >
			\b[xX][+-]|?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>


		<Rule color = "YAxis" >
			\b[yY]|[+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		<Rule color = "ZAxis" >
			\b[zZ][+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		<Rule color = "AAxis" >
			\b[aA][+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		<Rule color = "BAxis" >
			\b[bB]|[+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		<Rule color = "CAxis" >
			\b[cC][+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		<Rule color = "IJKAxis" >
			\b[iI]|[jJ]|[kK][+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		<Rule color = "SAxis" >
			\b[sS][+-]?[0-9a]+ | (\b\d+(\.[0-9]+)? | \.[0-9]+)
		</Rule>
		
		
		<Rule color = "Tools">
			\b[T][0-9a]+
		</Rule>
		
		<Rule color = "Feed_rate">
			\b[fF][0-9a]+
		</Rule>		
		
		<Rule color = "MCode">
			\b[mM][0-9a]+
		</Rule>
		
		<Keywords color = "Rapid" >
			<Word>G0</Word>
		</Keywords>
		
		<Keywords color="Motion" >
			<Word>G1</Word>
			<Word>G2</Word>
			<Word>G3</Word>
			<Word>G4</Word>
			<Word>G5</Word>
			<Word>G5.1</Word>
			<Word>G5.2</Word>
			<Word>G38.2</Word>
			<Word>G38.3</Word>
			<Word>G38.4</Word>
			<Word>G38.5</Word>
			<Word>G33</Word>
			<Word>G33.1</Word>
			<Word>G80</Word>
		</Keywords>
		
		<Keywords color="Units" >
			<Word>G20</Word>
			<Word>G21</Word>
		</Keywords>
		
		<Keywords color="Distance" >
			<Word>G90</Word>
			<Word>G91</Word>
			<Word>G90.1</Word>
			<Word>G91.1</Word>
			<Word>G7</Word>
			<Word>G8</Word>
		</Keywords>	
		
		<Keywords color="FeedRate" >
			<Word>G93</Word>
			<Word>G94</Word>
			<Word>G95</Word>
		</Keywords>			
		
		<!-- Digits -->
		<Rule color="NumberLiteral">
			\b0[xX][0-9a-fA-F]+  # hex number
		|	
			(	\b\d+(\.[0-9]+)?   #number with optional floating point
			|	\.[0-9]+           #or just starting with floating point
			)
			([eE][+-]?[0-9]+)? # optional exponent
		</Rule>		

		<Rule color="LineNumbers" >
			\b[nN][0-9a]+
		</Rule>

		<Span color="String">
			<Begin>"</Begin>
			<End>"</End>
			<RuleSet>
				<!-- span for escape sequences -->
				<Span begin="\\" end="."/>
			</RuleSet>
		</Span>
		
		<Span color="Char">
			<Begin>'</Begin>
			<End>'</End>
			<RuleSet>
				<!-- span for escape sequences -->
				<Span begin="\\" end="."/>
			</RuleSet>
		</Span>
		
		<Span color="String" multiline="true">
			<Begin>@"</Begin>
			<End>"</End>
			<RuleSet>
				<!-- span for escape sequences -->
				<Span begin='""' end=""/>
			</RuleSet>
		</Span>
		
		<Span color="String">
			<Begin>\$"</Begin>
			<End>"</End>
			<RuleSet>
				<!-- span for escape sequences -->
				<Span begin="\\" end="."/>
				<Span begin="\{\{" end=""/>
				<!-- string interpolation -->
				<Span begin="{" end="}" color="StringInterpolation" ruleSet=""/>
			</RuleSet>
		</Span>
		
		<!-- don't highlight "@int" as keyword -->
		<Rule>
			@[\w\d_]+
		</Rule>
		
		<Keywords color="ThisOrBaseReference">
			<Word>this</Word>
			<Word>base</Word>
		</Keywords>
		
		<Keywords color="TypeKeywords">
			<Word>as</Word>
			<Word>is</Word>
			<Word>new</Word>
			<Word>sizeof</Word>
			<Word>typeof</Word>
			<Word>stackalloc</Word>
		</Keywords>
		
		<Keywords color="TrueFalse">
			<Word>true</Word>
			<Word>false</Word>
		</Keywords>
		
		<Keywords color="Keywords">
			<Word>else</Word>
			<Word>if</Word>
			<Word>switch</Word>
			<Word>case</Word>
			<Word>default</Word>
			<Word>do</Word>
			<Word>for</Word>
			<Word>foreach</Word>
			<Word>in</Word>
			<Word>while</Word>
			<Word>lock</Word>
		</Keywords>
		
		<Keywords color="GotoKeywords">
			<Word>break</Word>
			<Word>continue</Word>
			<Word>goto</Word>
			<Word>return</Word>
		</Keywords>
		
		<Keywords color="ContextKeywords">
			<Word>yield</Word>
			<Word>partial</Word>
			<Word>global</Word>
			<Word>where</Word>
			<Word>select</Word>
			<Word>group</Word>
			<Word>by</Word>
			<Word>into</Word>
			<Word>from</Word>
			<Word>ascending</Word>
			<Word>descending</Word>
			<Word>orderby</Word>
			<Word>let</Word>
			<Word>join</Word>
			<Word>on</Word>
			<Word>equals</Word>
			<Word>var</Word>
			<Word>dynamic</Word>
			<Word>await</Word>
		</Keywords>
		
		<Keywords color="ExceptionKeywords">
			<Word>try</Word>
			<Word>throw</Word>
			<Word>catch</Word>
			<Word>finally</Word>
		</Keywords>
		
		<Keywords color="CheckedKeyword">
			<Word>checked</Word>
			<Word>unchecked</Word>
		</Keywords>
		
		<Keywords color="UnsafeKeywords">
			<Word>fixed</Word>
			<Word>unsafe</Word>
		</Keywords>
		
		<Keywords color="ValueTypeKeywords">
			<Word>bool</Word>
			<Word>byte</Word>
			<Word>char</Word>
			<Word>decimal</Word>
			<Word>double</Word>
			<Word>enum</Word>
			<Word>float</Word>
			<Word>int</Word>
			<Word>long</Word>
			<Word>sbyte</Word>
			<Word>short</Word>
			<Word>struct</Word>
			<Word>uint</Word>
			<Word>ushort</Word>
			<Word>ulong</Word>
		</Keywords>
		
		<Keywords color="ReferenceTypeKeywords">
			<Word>class</Word>
			<Word>interface</Word>
			<Word>delegate</Word>
			<Word>object</Word>
			<Word>string</Word>
			<Word>void</Word>
		</Keywords>
		
		<Keywords color="OperatorKeywords">
			<Word>explicit</Word>
			<Word>implicit</Word>
			<Word>operator</Word>
		</Keywords>
		
		<Keywords color="ParameterModifiers">
			<Word>params</Word>
			<Word>ref</Word>
			<Word>out</Word>
		</Keywords>
		
		<Keywords color="Modifiers">
			<Word>abstract</Word>
			<Word>const</Word>
			<Word>event</Word>
			<Word>extern</Word>
			<Word>override</Word>
			<Word>readonly</Word>
			<Word>sealed</Word>
			<Word>static</Word>
			<Word>virtual</Word>
			<Word>volatile</Word>
			<Word>async</Word>
		</Keywords>
		
		<Keywords color="Visibility">
			<Word>public</Word>
			<Word>protected</Word>
			<Word>private</Word>
			<Word>internal</Word>
		</Keywords>
		
		<Keywords color="NamespaceKeywords">
			<Word>namespace</Word>
			<Word>using</Word>
		</Keywords>
		
		<Keywords color="GetSetAddRemove">
			<Word>get</Word>
			<Word>set</Word>
			<Word>add</Word>
			<Word>remove</Word>
		</Keywords>
		
		<Keywords color="NullOrValueKeywords">
			<Word>null</Word>
			<Word>value</Word>
		</Keywords>

		<Keywords color="SemanticKeywords">
			<Word>nameof</Word>
		</Keywords>

		<!-- Mark previous rule-->
		<Rule color="MethodCall">
		\b
		[\d\w_]+  # an identifier
		(?=\s*\() # followed by (
		</Rule>
		

		
		<Rule color="Punctuation">
			[?,.;()\[\]{}+\-/%*&lt;&gt;^+~!|&amp;]+
		</Rule>
	</RuleSet>
</SyntaxDefinition>
